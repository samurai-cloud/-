海底有缆在线观测系统
由岸基控制系统、海底电缆和水下观测系统组成。我们可以通过它随时随地利用电脑、手机、显示大屏了解海洋水文、生态、水下视频等数据信息，实现了“透明海洋”。岸基控制系统主要负责收集海洋传感器采集回来的数据，经过整合之后发送到数据控制中心，同时兼顾水下的能源供给。由嵌入式PC104微型计算机控制，通过搭载 linux操作系统来保证岸基的可靠和稳定性，系统中运行着多线程网络处理程序，同时配置了Telnet、FTP等服务。
水下观测系统的核心是嵌入式ARM控制板，使用了杭州启航公司的QY9260核心板，它是整个平台最为核心的部分，承载着水下所有数据采集任务，负责各海洋传感器的数据采集和上传、 上电和断电以及控制命令的下发等任务。

负责内容：完成水下数据采集及上传等任务，即主要是使用传感器采集当前水域中的各项生态环境数据，经过数据传输通道将其传送至搭载平台中的嵌入式ARM控制板中。最终经由控制板整合打包数据之后发送给岸基控制系统，水下各设备之间通过专用的水密缆相连接，保证信号传输的稳定性，有效提升数据传输速率。

软件设计部分：首先是搭载嵌入式linux系统作为程序的运行环境，包括Bootload引导程序（完成硬件初始化，引导内核），linux内核（任务调度，内存管理等）的剪裁，制作根文件系统。然后是linux应用程序设计，开辟一个主线程，在此基础上开辟多线程以实现各自的功能，包括通信管理、数据采集、数据上传及日志记录等线程，同时利用互斥锁、条件变量等线程同步机制，使个线程协调合作。

内存泄露监测
使用mtrace检测泄漏，包含mcheck.h头文件，在代码中某处加入mtrace()函数开始跟踪，之后加入muntrace()停止跟踪
export MALLOC_TRACE=/path/to/your/outputfile
设置跟踪报告写入位置
gcc -g -o excutable source.c
加上-g选项使得可获取调试信息
GDB调试命令：
list(l):列出源代码
step(s):执行下一行语句
break(b):设置断点
info b:查看断点处情况

TCP抓包
tcpdump
1.作用：
（1）捕获网络协议包
（2）分析网络协议包
-i 指定监听的网络接口
-nn IP和端口均以数字形式显示
-c 在收到指定的数量的分组后，tcpdump停止，如果没有这个参数，tcpdump会持续不断的监听直到用户输入 [ctrl]-c 为止
-e 输出数据链路层的头部信息(显示MAC地址相关信息)。

在socket网络程序中，TCP和UDP分别是面向连接和非面向连接的。因此TCP的socket编程，收发两端（客户端和服务器端）都要有成对的socket，因此，发送端为了将多个发往接收端的包，更有效的发到对方，使用了优化方法（Nagle算法），将多次间隔较小、数据量小的数据，合并成一个大的数据块，然后进行封包。这样，接收端，就难于分辨出来了，必须提供科学的拆包机制。
TCP粘包是指发送方发送的若干包数据到接收方接收时粘成一包，从接收缓冲区看，后一包数据的头紧接着前一包数据的尾。
为了避免粘包现象，可采取以下几种措施：
（1）对于发送方引起的粘包现象，用户可通过编程设置来避免，TCP提供了强制数据立即传送的操作指令push，TCP软件收到该操作指令后，就立即将本段数据发送出去，而不必等待发送缓冲区满；
（2）对于接收方引起的粘包，则可通过优化程序设计、精简接收进程工作量、提高接收进程优先级等措施，使其及时接收数据，从而尽量避免出现粘包现象；
（3）由接收方控制，将一包数据按结构字段，人为控制分多次接收，然后合并，通过这种手段来避免粘包。
一种比较周全的对策是：接收方创建一预处理线程，对接收到的数据包进行预处理，将粘连的包分开。

ARM体系CPU工作方式
1.用户模式
2.快速中断模式
3.中断模式
4.管理模式
5.系统模式
ARM体系的CPU由两种工作状态
ARM状态：执行32位的字对齐的ARM指令
Thumb状态：执行16位的、半字对齐的Thumb指令

开漏输出：输出端相当于三极管的集电极，要得到高电平状态需要上拉电阻才行，适合于做电流型的驱动，其吸收电流的能力相对强（一般20mA以内）.
推挽式输出：可以输出高，低电平，连接数字器件;推挽结构一般是指两个三级管分别受到互补信号的控制，总是在一个三极管导通的时候另一个截止。高低电平由IC的电源低定。


 视频监控系统
如果只是想在客厅查看房间的情况，不需要什么复杂的协议。使用MJPG-STREAMER，它运行在ARM板上，手机连接同一个局域网（或者手机给ARM板开热点）使用浏览器直接观看视频。
只需要写两个程序：
在连接摄像头的ARM板子上，实现一个服务器程序：它一边读取摄像头数据，一边等待客户端连接并发送数据。
在手机或电脑上，编写客户端程序，它会从ARM板上获得数据并显示出来
只能实现局域网内的视频监控
mjpg-streamer没有实现声音传输
要实现互联网视频监控，需要另外实现内网穿透

主流的都是使用流媒体监控
需要写三个程序：
在连接摄像头的ARM板子上，实现一个推送程序：它一边读取摄像头数据，一边把数据推送给服务器
在服务器上，实现“流媒体服务器”程序：它接收ARM板发来的数据，并把数据转换格式后发给手机等客户端
在手机等客户端上，实现拉取程序：它从服务器上拉取数据，并显示出来。
把“推送程序”、“流媒体服务器”程序，都在ARM板上运行；手机等客户端只能在同一个局域网里观看视频
或者也使用内网穿透技术实现互联网视频监控
推送程序：ffmpeg
流媒体服务器程序：Nginx
客户端程序：VLC浏览器


海底有缆在线观测系统的数据处理
指令解析：由于传感器采样配置指令数据长度不等，且一次下发多条控制指令，这里专门设计了解析转发算法，其中关键代码如下所示，其中算法原理：对控制指令包体进行 CRC 冗余校验判断；解析第一条控制指令，依次取出 6 个字节组包转发至 串口直至结束；继续解析第二条指令组包转发，依次类似直至全部指令解析结束。

传感器原始采样数据处理：进行预处理(过滤、时间戳、特征值提取、平均值计算、最大值查找、包头查找等)。等待接收一定字节数量后，作为完整一条采样信息，添加到发送循环队列中，利用集中写/分散读方式，通过系统数据上传线程组包发送至岸基观测站中，当网络异常时存储在本地文件中。传感器原始采样数据，在进行过滤时首先判断数据包头，这些数据保存至传感器数据缓冲中，并依次连续接受固定长度的数据，或者直至接收到新的数据包头为止，然后利用集中写方式组包发送到岸基观测站。

CRC校验原理：根本思想就是先在要发送的帧后面附加一个数（这个就是用来校验的校验码，但要注意，这里的数也是二进制序列的，下同），生成一个新帧发送给接收端。当然，这个附加的数不是随意的，它要使所生成的新帧能与发送端和接收端共同选定的某个特定数整除（注意，这里不是直接采用二进制除法，而是采用一种称之为“模2除法”）。到达接收端后，再把接收到的新帧除以（同样采用“模2除法”）这个选定的除数。因为在发送端发送数据帧之前就已通过附加一个数，做了“去余”处理（也就已经能整除了），所以结果应该是没有余数。如果有余数，则表明该帧在传输过程中出现了差错。

系统脚本设计：
控制舱上电时，嵌入式Linux系统内核引导加载，默认linux系统仅有一个run level，根据相关配置文件启动指定各项系统服务后，接下来是用户自定义开机启动程序。
为了实现控制程序自动运行，必须经过一系列的脚本设计，包括程序自启动设计、TCP/IP网络设计、SD卡脚本设计等。这主要修改启动脚本etc/init.d/rcS文件实现的。
sd卡挂载 ：mount –t /dev/mmcblk0p1 /mnt/sdcard
TCP/IP网络自动配置： ifcongfig eth0 down 
 ifconfig eth0 200.1.1.161 netmask 255.255.255.0 
 ifconfig eth0 up