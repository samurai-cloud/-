容器/文件：特定格式的多媒体文件，如MP4,FLV,MKV等
媒体流（Stream）： 表示时间轴上的一段连续数据，如一段声音数据、一段视频数据或一段字幕数据，可以是压缩的，也可以是非压缩的，压缩的数据需要特定的编解码器。
数据帧/数据包：通常，一个媒体流是由大量的数组帧组成的，对于压缩数据，帧对应着编解码器的最小处理单元，分属于不同媒体流的数据帧，交错存储于容器中。
Frame对应压缩前的数据，packet压缩后的数据

编解码器：以帧为单位实现压缩数据和原始数据之间的相互转换
H264编码器：图像数据经过H264编码器变成H264帧
AAC编码器：音频文件编码成ACC帧

RTMP:
RTMP协议是一种用来进行实时数据通信的网络协议，主要用于流媒体视频通信。RTMP为应用层协议，底层传输层是基于TCP的可靠连接。当传输层的TCP建立连接后，RTMP协议也要客户端和服务器通过握手机制建立应用层上的RTMP连接。

HTTP:
HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写，是用于从万维网（WWW:World Wide Web）服务器传输超文本到本地浏览器的传送协议。HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件，图片文件，查询结果等）。HTTP协议工作于客户端-服务端架构为上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。Web服务器根据接收到的请求后，向客户端发送响应信息。

HTTP 请求方法
根据 HTTP 标准，HTTP 请求可以使用多种请求方法。
HTTP1.0 定义了三种请求方法： GET, POST 和 HEAD方法。
HTTP1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。
GET：请求指定的页面信息，并返回实体主体
HEAD:类似于GET请求，只不过返回的响应中没有具体的内容，用于获取报头。
POST：向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。
PUT:从客户端向服务器传送的数据取代指定的文档的内容。

客户端发送一个HTTP请求到服务器的请求消息包括以下格式：请求行（request line）、请求头部（header）、空行和请求数据四个部分组成，下图给出了请求报文的一般格式。

HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。

在浏览器地址栏键入URL，按下回车之后会经历以下流程：
1、浏览器向 DNS 服务器请求解析该 URL 中的域名所对应的 IP 地址；
2、解析出 IP 地址后，根据该 IP 地址和默认端口80，和服务器建立TCP连接；
3、浏览器发出读取文件（URL中域名后面部分对应的文件）的HTTP 请求，该请求报文作为 TCP 三次握手的第三个报文的数据发送给服务器；
4、服务器对浏览器请求作出响应，并把对应的 html 文本发送给浏览器；
5、释放 TCP连接；
6、浏览器将该 html 文本并显示内容；


三次握手：
1.客户端发送syn0给服务器
2.服务器收到syn0，回复syn1,ack(syn0+1)
3.客户端收到syn1，回复ack(syn1+1)

三次握手是为了防止，客户端的请求报文在网络滞留，客户端超时重传了请求报文，服务端建立连接，传输数据，释放连接之后，服务器又收到了客户端滞留的请求报文，建立连接一直等待客户端发送数据。
服务器对客户端的请求进行回应(第二次握手)后，就会理所当然的认为连接已建立，而如果客户端并没有收到服务器的回应呢？此时，客户端仍认为连接未建立，服务器会对已建立的连接保存必要的资源，如果大量的这种情况，服务器会崩溃。
两次握手为什么不可以：
两次不可以：tcp是全双工通信，两次握手只能确定单向数据链路是可以通信的，并不能保证反向的通信正常

1）基于TCP的socket：
1、服务器端程序：
1创建一个socket，用函数socket()
2绑定IP地址、端口等信息到socket上，用函数bind()
3设置允许的最大连接数，用函数listen()
4接收客户端上来的连接，用函数accept()
5收发数据，用函数send()和recv()，或者read()和write()
6关闭网络连接

2、客户端程序：
1创建一个socket，用函数socket()
2设置要连接的对方的IP地址和端口等属性
3连接服务器，用函数connect()
4收发数据，用函数send()和recv()，或read()和write()
5关闭网络连接

阻塞和非阻塞：调用者在事件没有发生的时候，一直在等待事件发生，不能去处理别的任务这是阻塞。调用者在事件没有发生的时候，可以去处理别的任务这是非阻塞。

同步和异步：调用者必须循环自去查看事件有没有发生，这种情况是同步。调用者不用自己去查看事件有没有发生，而是等待着注册在事件上的回调函数通知自己，这种情况是异步.

FFmpeg知识：
一套开源软件
可以记录、转换音视频：可以从摄像头中记录视频，从声卡中记录音频，可以转换为各种格式，保存起来
还可以把各种格式的音视频，转换为流：供在线观看
其他功能：视频截图、加水印、裁剪等等
Mplayer，ffplay，射手播放器，暴风影音，KMPlayer，QQ影音等视频频播放器的内核就是 FFmpeg
格式工厂的内核也是FFmpeg


如果只是想在客厅查看房间的情况，不需要什么复制的协议
作为程序员，我们需要写两个程序
1.在连接摄像头的ARM板子上，实现一个服务器程序：它一边读取摄像头数据，一边等待客户端连接并发送数据。
2.在手机或者电脑上，编写客户端程序，它会送ARM板上获得数据并显示出来。
3.这两个程序之间，不需要实现复制的协议。
约定数据格式
传输一帧帧的数据

实际上，我们可以使用现成的程序
mjpg-streamer,它运行在ARM板上
在手机上使用浏览器直接观看视频

优点：
1.程序简单，所有代码一目了然，便于学习
2.对ARM板的性能要求不高，主频200MHZ的ARM芯片也能实现

缺点：
只能实现局域网内的视频监控
要实现互联网视频监控，需要另外实现内网穿透
mjpg-streamer没有实现声音传输
mjpg-streamer项目已经不再维护，仅仅建议用于学习

JPEG图片的压缩格式
MJPEG是动态的视频编码格式
可以理解为：MJPEG就是把多个JPEG图片连续显示出来


  